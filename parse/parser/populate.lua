--[[
  We hope we receive table generated by [struc_folder]. So
  preknown assumptions used. Annotated data table usually
  have many elements so fast iterating is important.

  Also at this state we can be near memory limit. So data
  structure spawns directly into annotated data table.
]]

local populate_data_struc
populate_data_struc =
  function(data_struc, s)
    assert_table(data_struc)
    assert_number(data_struc.start)
    assert_number(data_struc.finish)
    if (#data_struc == 0) then
      data_struc.value = s:sub(data_struc.start, data_struc.finish)
    else
      for i = 1, #data_struc do
        populate_data_struc(data_struc[i], s)
      end
    end
    data_struc.name = data_struc.owner
    data_struc.start = nil
    data_struc.finish = nil
    data_struc.owner = nil
  end

local populate_data_struc_outer =
  function(data_struc, s)
    assert_table(data_struc)
    assert_string(s)
    assert(data_struc.is_folded)
    for i = 1, #data_struc do
      populate_data_struc(data_struc[i], s)
    end
    data_struc.is_folded = nil
  end

return populate_data_struc_outer
