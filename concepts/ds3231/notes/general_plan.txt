Verification (and validation)

  Verification checks data, making verdict.
  Validation changes data, making it valid.

  pass_1 +--------------------------+--
         + pass_2 +-----------------+
                  + pass_3 +--------+
                           + pass_4 +
  (opt^seq)

  Each validator depends of check result of corresponding
  verificator. In case of misdata, verficator returns three
  results: <bool> false, <str> error_msg, <table> errors_descr.
  That table "errors_descr" may be further passed to validator
  to parse and fix given problems.

  So validator does not need to do diagnosis as verificator
  (which can be quite complex), he just needs to know format of
  table and be able to hammer-fix possible errors.

  Validators separated from verifiers as there can be different
  strategies to fix given input.

  Verificators are dependent of parsers. But parser will produce
  incorrect result or raise error in parsing of bad input. Also parser
  do more computations as it must produce parsing result. But parser
  MUST NOT fail for data that passed verificator.

  Parser MAY change given table with data. So do clone of it if
  you need original.

  Verifier MUST NOT change given data.

  Validator MUST change given data (if it received report from
  verificator).

  pass 1 - byte pass
    verify we have array with 19 bytes
    we can write 19 bytes back to device
  pass 2 - byte mask pass
    verify we have zeroes in some bits
  pass 3 - BCD pass
    verify we have BCDs in specific bytes, convert them to numbers
  pass 4 - partial consistency pass
    verify date parts correcteness (1..31, 0..23 etc), alarm flags
  pass 5 - general consistency pass
    verify general date (date and alarm times)

